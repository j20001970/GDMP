name: ðŸ¤– Build Android
on: [workflow_call, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        arch: ["arm64-v8a", "x86_64"]
    name: Android ${{ matrix.arch }}
    runs-on: ubuntu-24.04
    env:
      NDK_VERSION: "23.2.8568313"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup NDK
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;${{ env.NDK_VERSION }}"

      - name: Setup
        run: |
          python ./setup.py

      - name: Android SDK/NDK Patch
        run: |
          echo "android_sdk_repository(name = \"androidsdk\")" >> mediapipe/WORKSPACE
          echo "android_ndk_repository(name = \"androidndk\", api_level=21)" >> mediapipe/WORKSPACE
          echo "bind(name = \"android/crosstool\", actual = \"@androidndk//:toolchain\")" >> mediapipe/WORKSPACE

      - name: Build
        run: |
          source ./venv/bin/activate
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/${{ env.NDK_VERSION }}
          python ./build.py android --android-skip-aar --arch ${{ matrix.arch }} --type release --output build/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-android-${{ matrix.arch }}
          path: |
            build/*

  build-aar:
    name: Android AAR
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup
        run: |
          python ./setup.py

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-artifact-android-*

      - name: Copy JNI Libraries
        run: |
          mkdir -p GDMP/android/aar/src/main/jniLibs
          cp -a build-artifact-android-*/* GDMP/android/aar/src/main/jniLibs

      - name: Build
        run: |
          source ./venv/bin/activate
          python ./build.py android --type release --output build/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-android
          path: |
            build/*.aar
